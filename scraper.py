import requests 
from bs4 import BeautifulSoup
import pandas as pd
from datetime import datetime
import schedule
import time

# H√†m l·∫•y tin t·ª©c t·ª´ kenh14
def lay_tin_tuc():
    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/117.0.0.0 Safari/537.36'}
    url = 'https://kenh14.vn/'
    
    try:
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, 'html.parser')

        articles = soup.find_all('li', class_=lambda x: x and ('news' in x or 'item' in x or 'knswli' in x))
        print(f"T√¨m th·∫•y {len(articles)} b√†i vi·∫øt")

        if len(articles) < 5:
            articles = soup.find_all('div', class_=lambda x: x and ('news' in x or 'story' in x))
            print(f"T√¨m th·∫•y {len(articles)} b√†i v·ªõi c√°ch kh√°c")

        danh_sach = []

        for article in articles:
            try:
                title_tag = article.find('h3', class_=lambda x: x and 'title' in x)
                if not title_tag:
                    title_tag = article.find('h2') or article.find('a', href=True)
                title = title_tag.get_text(strip=True) if title_tag else 'Kh√¥ng c√≥ ti√™u ƒë·ªÅ'

                desc_tag = article.find(lambda tag: tag.name in ['div', 'p', 'span']
                                        and tag.get('class') 
                                        and any('sapo' in c or 'desc' in c or 'summary' in c for c in tag.get('class')))
                if not desc_tag:
                    desc_tag = article.find('p')
                desc = desc_tag.get_text(strip=True) if desc_tag and len(desc_tag.get_text(strip=True)) > 20 else 'Kh√¥ng c√≥ m√¥ t·∫£'

                link_tag = article.find('a', href=True)
                link = link_tag['href'] if link_tag else ''
                if link and not link.startswith('http'):
                    link = 'https://kenh14.vn' + link

                img_tag = article.find('img', attrs={'src': True})
                img = img_tag['src'] if img_tag and 'src' in img_tag.attrs else 'Kh√¥ng c√≥ h√¨nh'

                danh_sach.append({
                    'Ti√™u ƒë·ªÅ': title,
                    'M√¥ t·∫£': desc,
                    'H√¨nh ·∫£nh': img,
                    'Link': link
                })

            except Exception as e:
                print(f"L·ªói l·∫•y b√†i: {e}")
                continue

        if danh_sach:
            df = pd.DataFrame(danh_sach)
            file_name = f"kenh14_{datetime.now().strftime('%Y%m%d_%H%M')}.xlsx"
            df.to_excel(file_name, index=False, engine='openpyxl')
            print(f"ƒê√£ l∆∞u file: {file_name}")
        else:
            print("Kh√¥ng l·∫•y ƒë∆∞·ª£c b√†i n√†o, ki·ªÉm tra l·∫°i!")

    except requests.RequestException as e:
        print(f"L·ªói l·∫•y trang web: {e}")
    except Exception as e:
        print(f"L·ªói kh√°c: {e}")
# L·∫•y tin t·ª©c ngay khi ch·∫°y code
lay_tin_tuc()
# L√™n l·ªãch ch·∫°y h·∫±ng ng√†y l√∫c 6h s√°ng
schedule.every().day.at("06:00").do(lay_tin_tuc)

print("üîÑ ƒêang ch·∫°y l·ªãch h·∫±ng ng√†y. Nh·∫•n Ctrl+C ƒë·ªÉ d·ª´ng.")

while True:
    schedule.run_pending()
    time.sleep(60)
